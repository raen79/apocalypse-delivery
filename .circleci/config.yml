version: 2.1

jobs:
  test:
    docker:
      - image: circleci/ruby:2.7-node
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: apocalypse_delivery_test
    steps:
      - checkout
      - restore_cache:
          key: gem-cache-v2-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          key: node-modules-v2-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: bundle install --jobs=1 --retry=3 --path vendor/bundle
      - save_cache:
          key: gem-cache-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          key: node-modules-v2-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Setup DB
          command: |
            sudo apt install -y postgresql-client || true
            RAILS_ENV=test bin/rails db:create
            RAILS_ENV=test bin/rails db:migrate
      - run:
          name: Run rubocop
          command: RAILS_ENV=test bundle exec rubocop
      - run:
          name: Check formatting
          command: RAILS_ENV=test bin/rails format:check
      - run:
          name: Run specs
          command: RAILS_ENV=test bundle exec rspec

workflows:
  version: 2
  build:
    jobs:
      - test
